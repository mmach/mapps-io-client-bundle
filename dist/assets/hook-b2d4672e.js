import{L as d,N as u,a as t,O as n,Q as o,S as E}from"./index-1a5b9518.js";const a=s=>{const r={grantRole:e=>s(new n().commandThunt(o.User.GRANT_USERTYPE_ROLE,e)),revokeRole:e=>s(new n().commandThunt(o.User.REVOKE_USERTYPE_ROLE,e)),getUserTypes:e=>s(new n().queryThunt(E.User.GET_USER_TYPES,e)),upserUserType:e=>s(new n().commandThunt(o.User.UPSERT_USERTYPE,e)),removeUserType:e=>s(new n().commandThunt(o.User.REMOVE_USERTYPE,e))};return{...r,revokeRole:async e=>(await r.revokeRole(e),await r.getUserTypes()),grantRole:async e=>(await r.grantRole(e),await r.getUserTypes()),upserUserType:async e=>(await r.upserUserType(e),await r.getUserTypes()),removeUserType:async e=>(await r.removeUserType(e),await r.getUserTypes())}},g=()=>s=>s.UserTypesAdminReducer.userTypes,S=s=>r=>s?r.UserTypesAdminReducer.userTypes.find(e=>e.id==s):null;function k(){const s=d(),{userTypesAdminReducer:r}=u(m=>({userTypesAdminReducer:m.UserTypesAdminReducer})),[e,c]=t.useState(),T=u(g()),y=u(S(e)),p=t.useCallback(a(s).grantRole,[s]),U=t.useCallback(a(s).revokeRole,[s]),l=t.useCallback(a(s).getUserTypes,[s]),R=t.useCallback(a(s).upserUserType,[s]),i=t.useCallback(a(s).removeUserType,[s]);return{selectors:{userTypesAdminReducer:r,getAllUserTypesReducer:T,getUserTypeByIdReducer:y},actions:{grantRole:p,revokeRole:U,getUserTypes:l,upserUserType:R,removeUserType:i},state:{userTypeId:e},hooks:{setUserTypeId:c},functions:{}}}export{k as u};
